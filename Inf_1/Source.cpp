#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cmath>
#include <cstdlib>
using namespace std;
int main()
{
	setlocale (LC_ALL, "rus");
	int action;
	while (1) {
		printf("\nВыберите действие:\n");
		printf("1) Определить, какое равенство точнее.\n");
		printf("2) Округлить сомнительные цифры числа, оставив верные знаки. Определить абсолютную погрешность результата.\n");
		printf("3) Найти предельные абсолютную и относительную погрешности приближенного числа, все цифры которого по умолчанию верные.\n");
		printf("0) Выход из программы.\n");
		scanf("%d", &action);
		switch (action) {
		case 0:
			return -1;
		case 1:
			system("cls");
			cout << "Какое равенство точнее: 1) 7/22 = 0.318 2) или sqrt(13) = 3.61\n";
			cout << ("Значения выражений с большим количеством десятичных знаков:\n");
			printf("1) 7/22 = %f\n", 7 / 22.);
			printf("2) sqrt(13) = %f\n", sqrt(13));
			cout << ("Предельные абсолютные погрешности, округляя их с избытком:\n");
			printf("1) %f\n", fabs((7 / 22.) - 0.318));
			printf("2) %f\n", fabs(sqrt(13) - 3.61));
			printf("Предельные абсолютные погрешности составляют в %:\n");
			printf("1) %f\n", ((fabs((7 / 22.) - 0.318)) / 0.318) * 100);
			printf("2) %f\n", (fabs(sqrt(13) - 3.61) / 3.61) * 100);
			if (fabs((7 / 22.) - 0.318) < fabs(sqrt(13) - 3.61))
				cout << "Значит, более точное выражение: 7/22 = 0.318\n";
			else cout << "Значит, более точное выражение: sqrt(13) = 3.61\n";
			system("pause");
			break;
		case 2:
			system("cls");
			cout << "Округлить сомнительные цифры числа, оставив верные знаки. Определить абсолютную погрешность результата.\n";
			cout << "0.3944,  x = 0.15%";
			printf("0.3944 * 0.0015 = %f\n", 0.3944 * 0.0015);
			printf("В данном числе верными являются 5 цифр, поэтому округляем его, сохраняя эти цифры %.2f\n", round(0.3944*100)/100);
			if ((0.3944 - round(0.3944)) + (0.3944 * 0.0015) > 0.01)
				printf("%f > 0.01\n", (0.3944 - round(0.3944)) + (0.3944 * 0.0015));
			else printf("% f < 0.01\n", (0.3944 - round(0.3944)) + (0.3944 * 0.0015));
			printf("Число округляется до ");
			system("pause");
			break;
		case 3:

			break;
		}
	}

}